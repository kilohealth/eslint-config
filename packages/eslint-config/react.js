const OFF = 0;
const WARNING = 1;
const ERROR = 2;

module.exports = {
  extends: [require.resolve('./node.js'), 'plugin:react/recommended'],
  env: {
    browser: true,
  },
  plugins: ['react', 'react-hooks'],
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
  },
  rules: {
    'react-hooks/exhaustive-deps': OFF,
    'react-hooks/rules-of-hooks': ERROR,
    'react/default-props-match-prop-types': WARNING,
    'react/display-name': [WARNING, { ignoreTranspilerName: false }],
    'react/jsx-closing-bracket-location': [2, 'tag-aligned'],
    'react/jsx-closing-tag-location': 'error',
    'react/jsx-curly-spacing': WARNING,
    'react/jsx-equals-spacing': ['warn', 'never'],
    'react/jsx-first-prop-new-line': ['warn', 'multiline-multiprop'],
    'react/jsx-indent-props': OFF,
    'react/jsx-key': WARNING,
    'react/jsx-max-props-per-line': OFF,
    'react/jsx-no-bind': OFF,
    'react/jsx-no-comment-textnodes': 'warn',
    'react/jsx-no-duplicate-props': WARNING,
    'react/jsx-no-literals': OFF,
    'react/jsx-no-undef': WARNING,
    'react/jsx-pascal-case': WARNING,
    'react/jsx-props-no-multi-spaces': 'warn',
    'react/jsx-sort-default-props': [
      OFF,
      {
        ignoreCase: true,
      },
    ],
    'react/jsx-sort-props': OFF,
    'react/jsx-space-before-closing': ['off', 'always'],
    'react/jsx-tag-spacing': [
      'error',
      {
        closingSlash: 'never',
        beforeSelfClosing: 'always',
        afterOpening: 'never',
        beforeClosing: 'never',
      },
    ],
    'react/jsx-uses-react': WARNING,
    'react/jsx-uses-vars': WARNING,
    'react/no-children-prop': OFF,
    'react/no-danger': WARNING,
    'react/no-deprecated': ['warn'],
    'react/no-did-mount-set-state': WARNING,
    'react/no-direct-mutation-state': 2,
    'react/no-is-mounted': 'error',
    'react/no-multi-comp': [WARNING, { ignoreStateless: true }],
    'react/no-render-return-value': 'error',
    'react/no-set-state': OFF,
    'react/no-string-refs': 'error',
    'react/no-this-in-sfc': 'error',
    'react/no-typos': 'warn',
    'react/no-unescaped-entities': 'warn',
    'react/no-unknown-property': WARNING,
    'react/no-unused-prop-types': OFF,
    'react/no-unused-state': WARNING,
    'react/no-will-update-set-state': 'warn',
    'react/prefer-es6-class': WARNING,
    'react/prefer-stateless-function': ['warn', { ignorePureComponents: true }],
    'react/prop-types': OFF,
    'react/react-in-jsx-scope': WARNING,
    'react/require-default-props': OFF,
    'react/require-render-return': 'error',
    'react/self-closing-comp': WARNING,
    'react/sort-comp': [
      WARNING,
      {
        order: [
          'propTypes',
          'defaultProps',
          'static-variables',
          'state',
          '/^.+Ref|Refs$/',
          '/^animated.+$/',
          '/^interval|tabButtons|animationDuration$/',
          'lifecycle',
          'everything-else',
          '/^render.+$/',
          'render',
        ],
      },
    ],
    'react/sort-prop-types': [
      OFF,
      {
        callbacksLast: false,
        ignoreCase: true,
        requiredFirst: false,
        sortShapeProp: true,
        noSortAlphabetically: false,
      },
    ],
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
};
